
//like str2num, but also returns the number of characters read.
float str2num2(char* str, float *Iout)
{
    // -1243.0423
    // 0b1010101011
    // 0o1702403715
    // 0xFF0035EA12
    float End = 0;
    float I = 0;
    float Num = 0;
    float Minus = 0;
    float Frac = 0;
    float N = 0;
    float Base = 10;
    float C = str[I];
    if(C == 0){goto s2n2_exit;}
    else
    {
        if(C == '-'){Minus = 1; I+=1;}
        if(C == '0')
        {
            if(str[I+1]=='b'){Base = 2;I+=2;}
            if(str[I+1]=='o'){Base = 8;I+=2;}
            if(str[I+1]=='x'){Base = 16;I+=2;}
            
        }
    }
    while(!End)
    {
        C = str[I++];
        //P("s2n2:[");Pc(C);P("]\n");
        if(C == 0){End = 1;}else
        {
         if(C == '.'){End = 1; Frac = 1;}
         else
         {
            N = -1;
            if(C == '0'){N=0;}
            if(C == '1'){N=1;}
            if(Base > 2){
                if(C == '2'){N=2;}
                if(C == '3'){N=3;}
                if(C == '4'){N=4;}
                if(C == '5'){N=5;}
                if(C == '6'){N=6;}
                if(C == '7'){N=7;}
                if(Base > 8){
                    if(C == '8'){N=8;}
                    if(C == '9'){N=9;}
                    if(Base > 10){
                        if(C == 'A'){N=10;}
                        if(C == 'B'){N=11;}
                        if(C == 'C'){N=12;}
                        if(C == 'D'){N=13;}
                        if(C == 'E'){N=14;}
                        if(C == 'F'){N=15;}
                    }
                }
            }
            if(N == -1){End = 1; Frac = 0;}
            else{Num = Num*Base+N;}
         }
        }
    }
    if(Frac==1)
    {
     End = 0;
     while(!End) //this could screw up when string doesnt end with this number
     {
        C = str[I++];
        if(C == 0){End = 1;}else
        {
            N = 0;
            if(C == '0'){N=0;}
            if(C == '1'){N=1;}
            if(Base > 2){
                if(C == '2'){N=2;}
                if(C == '3'){N=3;}
                if(C == '4'){N=4;}
                if(C == '5'){N=5;}
                if(C == '6'){N=6;}
                if(C == '7'){N=7;}
                if(Base > 8){
                    if(C == '8'){N=8;}
                    if(C == '9'){N=9;}
                    if(Base > 10){
                        if(C == 'A'){N=10;}
                        if(C == 'B'){N=11;}
                        if(C == 'C'){N=12;}
                        if(C == 'D'){N=13;}
                        if(C == 'E'){N=14;}
                        if(C == 'F'){N=15;}
                    }
                }
            }
            Num = Num*Base+N;
            Frac++;
        }
     }
    }
    if(Frac){Num /=(Base^^(Frac-1));}
    if(Minus){Num = -Num;}
    s2n2_exit:
    *Iout = I-1;
    return Num;
}


float isIdent(char C){
    if(isAlpha(C)){return 1;}
    if(isNum(C)){return 1;}
    if(C == '_'){return 1;}
    return 0;
}


float caseless_strncmp(float str1, float str2, float n){
    float I1 = str1;
    float I2 = str2;
    while(n > 0){
        float C1 = *I1++;
        float C2 = *I2++;
        //Pc(C1);P(", ");Pc(C2);
        C1 = toLower(C1);
        C2 = toLower(C2);
        //P(", ");Pc(C1);P(", ");Pc(C2);
        float diff = C1 - C2;
        //P2(", ",diff,"\n");
        if(diff != 0){
            //P("strncmp: not [");P(str2);P("]\n");
            return diff;
        }
        n--;
    }
    //P("strncmp: yes [");P(str2);P("]\n");
    return 0;
}
